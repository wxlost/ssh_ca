#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
export PATH
#Version: 0.6.8

#这里判断系统
if [ -f /etc/redhat-release ]; then
    release="centos"
elif cat /etc/issue | grep -Eqi "debian"; then
    release="debian"
elif cat /etc/issue | grep -Eqi "ubuntu"; then
    release="ubuntu"
elif cat /etc/issue | grep -Eqi "centos|red hat|redhat"; then
    release="centos"
elif cat /proc/version | grep -Eqi "debian"; then
    release="debian"
elif cat /proc/version | grep -Eqi "ubuntu"; then
    release="ubuntu"
elif cat /proc/version | grep -Eqi "centos|red hat|redhat"; then
    release="centos"
fi

#check if we are root
if [ $EUID -ne 0 ]; then
	echo 'Error: you need to be root to run this script'; exit 1;
fi

# Install some dependencies
if [ "${release}" = "centos" ]; then
	yum -y install git wget ntp vim net-tools ntpdate
	rm -f /etc/localtime;cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
	ntpdate 1.asia.pool.ntp.org
	chkconfig iptables off && service iptables stop
	systemctl disable firewalld && systemctl stop firewalld
else
	apt-get update 
	apt-get -y install wget ntpdate
	ntpdate 1.asia.pool.ntp.org
fi
clear

printf "
#######################################################################
#     欢迎使用 onepvp.com SSH密钥安装程序
#     系统支持 CentOS/RadHat 5+ Debian 6+ and Ubuntu 12+
#     注意:默认会自动关闭防火墙
#######################################################################
"
#echo "Welcome to onepvp.com SSH Key Installer"

read -p "按任意键继续...按 Ctrl + C 取消" var

#check count of parameters. We need only 1, which is key id
if [ $# -eq 0 -o $# -gt 2 ]; then
	echo "Welcome to onepvp.com SSH Key Installer"
	echo " Installs selected SSH keys from onepvp.com portal"
	echo " - Usage: $0 {key_id} [-p]"; exit 1;
fi
KEY_ID=${1}
DISABLE_PW_LOGIN=0
if [ $# -eq 2 -a "$2" = '-p' ]; then
	DISABLE_PW_LOGIN=1
fi

# Disable selinux
if [ -s /etc/selinux/config ] && grep 'SELINUX=enforcing' /etc/selinux/config; then
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    setenforce 0
fi

if [ ! -f "${HOME}/.ssh/authorized_keys" ]; then
	echo "Info: ~/.ssh/authorized_keys is missing ...";

	echo "Creating ${HOME}/.ssh/authorized_keys ..."
	mkdir -p ${HOME}/.ssh/
	touch ${HOME}/.ssh/authorized_keys

	if [ ! -f "${HOME}/.ssh/authorized_keys" ]; then
		echo "Failed to create SSH key file"
	else
		echo "Key file created, proceeding..."
	fi
fi

#get key from server
curl -D /tmp/headers.txt https://onepvp.com/shell/sh/${KEY_ID} >/tmp/key.txt 2>/dev/null
HTTP_CODE=$(sed -n 's/HTTP\/1\.[0-9] \([0-9]\+\).*/\1/p' /tmp/headers.txt | tail -n 1)
if [ $HTTP_CODE -ne 200 ]; then
	echo "Error: onepvp.com API server went away"; exit 1;
fi
PUB_KEY="$(cat /tmp/key.txt)"

if [ "${PUB_KEY}" = '0' ]; then
	echo "Error: Key ${KEY_ID} wasn't found on onepvp.com Key Manager"; exit 1;
fi

if [ $(grep -m 1 -c "${PUB_KEY}" ${HOME}/.ssh/authorized_keys) -eq 1 ]; then
	echo 'Warning: Key is already installed'; exit 1;
fi

#install key
echo -e "\n${PUB_KEY}\n" >> ${HOME}/.ssh/authorized_keys
rm -rf /tmp/key.txt
rm -rf /tmp/headers.txt
echo 'Key installed successfully'
echo 'Thanks, onepvp.com Key Installer'

#disable root password
if [ ${DISABLE_PW_LOGIN} -eq 1 ]; then
	#grep ^PasswordAuthentication /etc/ssh/sshd_config | awk '{print $2}'
	if [ -z "`grep ^PasswordAuthentication /etc/ssh/sshd_config`" ]; then
	sed -i "s@^#PasswordAuthentication.*@&\nPasswordAuthentication no@" /etc/ssh/sshd_config
	else
	sed -i "s@^PasswordAuthentication.*@PasswordAuthentication no@" /etc/ssh/sshd_config
	fi
	echo 'Disabled password login in SSH'
	#echo 'Restart SSHd manually!'
fi
echo ' '
curl -s myip.ipip.net

# Use default SSH port 22. If you use another SSH port on your server
if [ -e "/etc/ssh/sshd_config" ]; then
  [ -z "`grep ^Port /etc/ssh/sshd_config`" ] && ssh_port=22 || ssh_port=`grep ^Port /etc/ssh/sshd_config | awk '{print $2}'`
  while :; do echo
    read -p "请输入新的SSH端口（当前端口: $ssh_port): " SSH_PORT
    [ -z "$SSH_PORT" ] && SSH_PORT=$ssh_port
    if [ $SSH_PORT -eq 22 >/dev/null 2>&1 -o $SSH_PORT -gt 1024 >/dev/null 2>&1 -a $SSH_PORT -lt 65535 >/dev/null 2>&1 ]; then
      break
    else
      echo "${CWARNING}输入错误！ 输入范围: 22,1025~65534${CEND}"
    fi
  done

  if [ -z "`grep ^Port /etc/ssh/sshd_config`" -a "$SSH_PORT" != '22' ]; then
    sed -i "s@^#Port.*@&\nPort $SSH_PORT@" /etc/ssh/sshd_config
  elif [ -n "`grep ^Port /etc/ssh/sshd_config`" ]; then
    sed -i "s@^Port.*@Port $SSH_PORT@" /etc/ssh/sshd_config
  fi
fi

#这里可以增加 防火墙 操作部分

service sshd restart
echo 'Restart SSHd success!'

#以下为我个人用的自定义
# Custom profile
cat > /etc/profile.d/oneinstack.sh << EOF
HISTSIZE=10000
PS1="\[\e[37;40m\][\[\e[32;40m\]\u\[\e[37;40m\]@\h \[\e[35;40m\]\W\[\e[0m\]]\\\\$ "
HISTTIMEFORMAT="%F %T \$(whoami) "

alias l='ls -AFhlt'
alias lh='l | head'
alias vi=vim

GREP_OPTIONS="--color=auto"
alias grep='grep --color'
alias egrep='egrep --color'
alias fgrep='fgrep --color'
EOF

[ -z "$(grep ^'PROMPT_COMMAND=' /etc/bashrc)" ] && cat >> /etc/bashrc << EOF
PROMPT_COMMAND='{ msg=\$(history 1 | { read x y; echo \$y; });logger "[euid=\$(whoami)]":\$(who am i):[\`pwd\`]"\$msg"; }'
EOF

# /etc/security/limits.conf
[ -e /etc/security/limits.d/*nproc.conf ] && rename nproc.conf nproc.conf_bk /etc/security/limits.d/*nproc.conf
sed -i '/^# End of file/,$d' /etc/security/limits.conf
cat >> /etc/security/limits.conf <<EOF
# End of file
* soft nproc 65535
* hard nproc 65535
* soft nofile 65535
* hard nofile 65535
EOF